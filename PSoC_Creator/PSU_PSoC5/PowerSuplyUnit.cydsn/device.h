/*******************************************************************************
* Copyright 2009, Cypress Semiconductor Corporation.  All rights reserved.
* You may use this file only in accordance with the license, terms, conditions, 
* disclaimers, and limitations in the end user license agreement accompanying 
* the software package with which this file was provided.
********************************************************************************/
/* ========================================
 *
 * This file is automatically generated by PSoC Creator
 * and should not be edited by hand.
 *
 * This file is necessary for your project to build.
 * Please do not delete it.
 *
 * ========================================
*/

#ifndef __DEVICE_H__
#define __DEVICE_H__
    
#include <project.h>
#include "type.h"
#include "OS\SystemOS.h"    
#include "Utils\GeneralUtils.h"

#define PROGRAM_VERSION_MAJOR 1
#define PROGRAM_VERSION_MINOR 0
    
#define TEMPER_ERR (127)
#define TEMPER_NO_DEVICE (TEMPER_ERR - 1)
#define TEMPER_BUS_SHORT (TEMPER_NO_DEVICE - 1)
#define TEMPER_INIT (TEMPER_BUS_SHORT - 1)
#define TemperatureSensorIsNorm(value) (value != TEMPER_ERR && value != TEMPER_NO_DEVICE && value != TEMPER_BUS_SHORT && value != TEMPER_INIT)
    
#define Voltage_MAX 15 * 100
#define Voltage_MIN 0
#define Amperage_MAX 8 * 1000
#define Amperage_MIN 5
    
typedef enum {
	smVoltageStab = 0,
	smAmperageStab,
} TStabilizeMode;

typedef enum {
	pmInit = 0,
	pmBipolar,
    pmUnipolar
} TPolarMode;

typedef enum {
	svNone = 0,
	svMeasuredVoltageA,
	svMeasuredAmperageA,
	svMeasuredVoltageB,
	svMeasuredAmperageB,
	svSetPointVoltageA,
	svSetPointAmperageA,
	svSetPointVoltageB,
	svSetPointAmperageB,
	svTemperature,
	svTemperatureCpu,
} TSelectValue;

typedef enum {
	cvVoltageA,
	cvAmperageA,
	cvVoltageB,
	cvAmperageB
} TChangedValue;

typedef enum {
	ssmNone = 0,
	ssmVoltageA,
	ssmAmperageA,
	ssmVoltageB,
	ssmAmperageB,
} TSelectStabilizeMode;

typedef enum {
	tcNorm = 0,
	tcInvisible,
	tcInvert
} TTextColor;

typedef enum {
	ltSolid = 0,
	ltDashed,
	ltDoted,
	ltInvisible
} TLineType;

typedef WORD TElectrValue, * PTElectrValue;     
//typedef TElectrValue TVoltage;      /*voltage * 100*/
//typedef TElectrValue TAmperage;     /*amperage * 1000*/


typedef struct {
	INT Radiator;
    INT Cpu;
    BOOL FanIsOn;
} TTemperature, *PTTemperature;

#endif  /* __DEVICE_H__ */
/*[]*/
